<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		 http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ">

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan base-package="com.vmgs" />

	
	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
	<mvc:annotation-driven />
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!--esta configuracion <mvc:annotaion-driven /> afecta los interceptores que definimos anteriormente en mvc-dispatcher-servlet
	aki,	defined in your XML config. Fuente: http://stackoverflow.com/questions/9400806/springs-localization-doesnt-switch-languages -->
	<mvc:interceptors>
		<!--Localizacion -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" /></bean>
		
		<!-- Theme Change Interceptor and Resolver definition -->
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor">
			<property name="paramName" value="theme" />
		</bean>
	</mvc:interceptors>
	
	<!-- Esta es la configuracion de la base de datos ///////////////////////////////////////////////////////////////////////////////////////-->
		<!-- Define all property files here. Values will be available in all other 
			spring config files. -->
		<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		   <property name="locations" value="classpath:db.properties"/>
		</bean>
		
		<!--for our production database, do not set hibernate.hbm2ddl.auto - the default is to make no database changes. Instead, we manually create an SQL DDL update script that applies changes from one version to the next. -->
		<bean id="entityManagerFactory"	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" name="EntityManagerFactory">
			<property name="persistenceXmlLocation" value="classpath:./META-INF/persistence.xml"/>
			<property name="persistenceUnitName" value="default"></property>
			<property name="dataSource" ref="dataSource"></property>
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">${db.dialect}</prop>
					<prop key="hibernate.hbm2ddl.auto">${db.auto}</prop>
					<prop key="hibernate.hbm2ddl.import_files">${db.import_files}</prop>
				</props>
			</property>
		
		</bean>

		<!-- Values are defined in db.properties -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${db.driver}" />
			<property name="url" value="${db.url}" />
			<property name="username" value="${db.username}" />
			<property name="password" value="${db.password}" />
		</bean>

		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" name="TransactionManager">
			<property name="entityManagerFactory" ref="entityManagerFactory"></property>
			<property name="dataSource" ref="dataSource"/>
		</bean>

		<tx:annotation-driven />

		<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
</beans>
